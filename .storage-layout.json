{
  "StateVerifier": { "storage": [] },
  "TokenVerifier": { "storage": [] },
  "ERC721Flow": {
    "storage": [
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "_owner",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "201",
        "type": "t_address"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "_status",
        "offset": 0,
        "slot": "251",
        "type": "t_uint256"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "fs",
        "offset": 0,
        "slot": "301",
        "type": "t_struct(Storage)_storage"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "323",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "_childFlows",
        "offset": 0,
        "slot": "423",
        "type": "t_struct(AddressSet)_storage"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "_childFlowsToUpdateFlowRate",
        "offset": 0,
        "slot": "425",
        "type": "t_struct(AddressSet)_storage"
      },
      {
        "contract": "src/ERC721Flow.sol:ERC721Flow",
        "label": "erc721Votes",
        "offset": 0,
        "slot": "427",
        "type": "t_contract(IERC721Checkpointable)"
      }
    ]
  },
  "Flow": {
    "storage": [
      {
        "contract": "src/Flow.sol:Flow",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "_owner",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "201",
        "type": "t_address"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "_status",
        "offset": 0,
        "slot": "251",
        "type": "t_uint256"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "fs",
        "offset": 0,
        "slot": "301",
        "type": "t_struct(Storage)_storage"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "__gap",
        "offset": 0,
        "slot": "323",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "_childFlows",
        "offset": 0,
        "slot": "423",
        "type": "t_struct(AddressSet)_storage"
      },
      {
        "contract": "src/Flow.sol:Flow",
        "label": "_childFlowsToUpdateFlowRate",
        "offset": 0,
        "slot": "425",
        "type": "t_struct(AddressSet)_storage"
      }
    ]
  },
  "GeneralizedTCR": {
    "storage": [
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "__gap",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "_owner",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "201",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "_status",
        "offset": 0,
        "slot": "251",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "arbitrator",
        "offset": 0,
        "slot": "301",
        "type": "t_contract(IArbitrator)"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "arbitratorExtraData",
        "offset": 0,
        "slot": "302",
        "type": "t_bytes_storage"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "governor",
        "offset": 0,
        "slot": "303",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "erc20",
        "offset": 0,
        "slot": "304",
        "type": "t_contract(IERC20)"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "submissionBaseDeposit",
        "offset": 0,
        "slot": "305",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "removalBaseDeposit",
        "offset": 0,
        "slot": "306",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "submissionChallengeBaseDeposit",
        "offset": 0,
        "slot": "307",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "registrationMetaEvidence",
        "offset": 0,
        "slot": "308",
        "type": "t_string_storage"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "clearingMetaEvidence",
        "offset": 0,
        "slot": "309",
        "type": "t_string_storage"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "removalChallengeBaseDeposit",
        "offset": 0,
        "slot": "310",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "challengePeriodDuration",
        "offset": 0,
        "slot": "311",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "metaEvidenceUpdates",
        "offset": 0,
        "slot": "312",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "itemList",
        "offset": 0,
        "slot": "313",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "items",
        "offset": 0,
        "slot": "314",
        "type": "t_mapping(t_bytes32,t_struct(Item)_storage)"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "arbitratorDisputeIDToItem",
        "offset": 0,
        "slot": "315",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes32))"
      },
      {
        "contract": "src/tcr/GeneralizedTCR.sol:GeneralizedTCR",
        "label": "itemIDtoIndex",
        "offset": 0,
        "slot": "316",
        "type": "t_mapping(t_bytes32,t_uint256)"
      }
    ]
  },
  "FlowTCR": {
    "storage": [
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "__gap",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "_owner",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "201",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "_status",
        "offset": 0,
        "slot": "251",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "arbitrator",
        "offset": 0,
        "slot": "301",
        "type": "t_contract(IArbitrator)"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "arbitratorExtraData",
        "offset": 0,
        "slot": "302",
        "type": "t_bytes_storage"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "governor",
        "offset": 0,
        "slot": "303",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "erc20",
        "offset": 0,
        "slot": "304",
        "type": "t_contract(IERC20)"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "submissionBaseDeposit",
        "offset": 0,
        "slot": "305",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "removalBaseDeposit",
        "offset": 0,
        "slot": "306",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "submissionChallengeBaseDeposit",
        "offset": 0,
        "slot": "307",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "registrationMetaEvidence",
        "offset": 0,
        "slot": "308",
        "type": "t_string_storage"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "clearingMetaEvidence",
        "offset": 0,
        "slot": "309",
        "type": "t_string_storage"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "removalChallengeBaseDeposit",
        "offset": 0,
        "slot": "310",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "challengePeriodDuration",
        "offset": 0,
        "slot": "311",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "metaEvidenceUpdates",
        "offset": 0,
        "slot": "312",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "itemList",
        "offset": 0,
        "slot": "313",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "items",
        "offset": 0,
        "slot": "314",
        "type": "t_mapping(t_bytes32,t_struct(Item)_storage)"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "arbitratorDisputeIDToItem",
        "offset": 0,
        "slot": "315",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes32))"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "itemIDtoIndex",
        "offset": 0,
        "slot": "316",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "flowContract",
        "offset": 0,
        "slot": "317",
        "type": "t_contract(IManagedFlow)"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "tcrFactory",
        "offset": 0,
        "slot": "318",
        "type": "t_contract(ITCRFactory)"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "requiredRecipientType",
        "offset": 20,
        "slot": "318",
        "type": "t_enum(RecipientType)"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "curveSteepness",
        "offset": 0,
        "slot": "319",
        "type": "t_int256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "basePrice",
        "offset": 0,
        "slot": "320",
        "type": "t_int256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "maxPriceIncrease",
        "offset": 0,
        "slot": "321",
        "type": "t_int256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "supplyOffset",
        "offset": 0,
        "slot": "322",
        "type": "t_int256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "priceDecayPercent",
        "offset": 0,
        "slot": "323",
        "type": "t_int256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "perTimeUnit",
        "offset": 0,
        "slot": "324",
        "type": "t_int256"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "founderRewardAddress",
        "offset": 0,
        "slot": "325",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/FlowTCR.sol:FlowTCR",
        "label": "founderRewardDuration",
        "offset": 0,
        "slot": "326",
        "type": "t_uint256"
      }
    ]
  },
  "ERC20VotesArbitrator": {
    "storage": [
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "votingToken",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(ERC20VotesMintable)"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "arbitrable",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IArbitrable)"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "_votingPeriod",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "_votingDelay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "_revealPeriod",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "disputeCount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "_arbitrationCost",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "disputes",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Dispute)_storage)"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "_initialized",
        "offset": 0,
        "slot": "8",
        "type": "t_uint8"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "_initializing",
        "offset": 1,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "__gap",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "__gap",
        "offset": 0,
        "slot": "59",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "__gap",
        "offset": 0,
        "slot": "109",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "_owner",
        "offset": 0,
        "slot": "159",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "__gap",
        "offset": 0,
        "slot": "160",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "209",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "__gap",
        "offset": 0,
        "slot": "210",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "_status",
        "offset": 0,
        "slot": "259",
        "type": "t_uint256"
      },
      {
        "contract": "src/tcr/ERC20VotesArbitrator.sol:ERC20VotesArbitrator",
        "label": "__gap",
        "offset": 0,
        "slot": "260",
        "type": "t_array(t_uint256)_storage"
      }
    ]
  },
  "ERC20VotesMintable": {
    "storage": [
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "__gap",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_owner",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "201",
        "type": "t_address"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_status",
        "offset": 0,
        "slot": "251",
        "type": "t_uint256"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_balances",
        "offset": 0,
        "slot": "301",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_allowances",
        "offset": 0,
        "slot": "302",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "303",
        "type": "t_uint256"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_name",
        "offset": 0,
        "slot": "304",
        "type": "t_string_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_symbol",
        "offset": 0,
        "slot": "305",
        "type": "t_string_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "__gap",
        "offset": 0,
        "slot": "306",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_hashedName",
        "offset": 0,
        "slot": "351",
        "type": "t_bytes32"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_hashedVersion",
        "offset": 0,
        "slot": "352",
        "type": "t_bytes32"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_name",
        "offset": 0,
        "slot": "353",
        "type": "t_string_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_version",
        "offset": 0,
        "slot": "354",
        "type": "t_string_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "__gap",
        "offset": 0,
        "slot": "355",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_nonces",
        "offset": 0,
        "slot": "403",
        "type": "t_mapping(t_address,t_struct(Counter)_storage)"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
        "offset": 0,
        "slot": "404",
        "type": "t_bytes32"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "__gap",
        "offset": 0,
        "slot": "405",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_delegates",
        "offset": 0,
        "slot": "454",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_checkpoints",
        "offset": 0,
        "slot": "455",
        "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)_storage)dyn_storage)"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_totalSupplyCheckpoints",
        "offset": 0,
        "slot": "456",
        "type": "t_array(t_struct(Checkpoint)_storage)dyn_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "__gap",
        "offset": 0,
        "slot": "457",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "minter",
        "offset": 0,
        "slot": "504",
        "type": "t_address"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "isMinterLocked",
        "offset": 20,
        "slot": "504",
        "type": "t_bool"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "rewardPool",
        "offset": 0,
        "slot": "505",
        "type": "t_address"
      },
      {
        "contract": "src/ERC20VotesMintable.sol:ERC20VotesMintable",
        "label": "_ignoreRewardsAddresses",
        "offset": 0,
        "slot": "506",
        "type": "t_struct(AddressSet)_storage"
      }
    ]
  },
  "TokenEmitter": {
    "storage": [
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "curveSteepness",
        "offset": 0,
        "slot": "0",
        "type": "t_int256"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "basePrice",
        "offset": 0,
        "slot": "1",
        "type": "t_int256"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "maxPriceIncrease",
        "offset": 0,
        "slot": "2",
        "type": "t_int256"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "supplyOffset",
        "offset": 0,
        "slot": "3",
        "type": "t_int256"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "perTimeUnit",
        "offset": 0,
        "slot": "4",
        "type": "t_int256"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "decayConstant",
        "offset": 0,
        "slot": "5",
        "type": "t_int256"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "priceDecayPercent",
        "offset": 0,
        "slot": "6",
        "type": "t_int256"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "_initialized",
        "offset": 0,
        "slot": "7",
        "type": "t_uint8"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "_initializing",
        "offset": 1,
        "slot": "7",
        "type": "t_bool"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "__gap",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "_owner",
        "offset": 0,
        "slot": "58",
        "type": "t_address"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "__gap",
        "offset": 0,
        "slot": "59",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "__gap",
        "offset": 0,
        "slot": "108",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "__gap",
        "offset": 0,
        "slot": "158",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "_status",
        "offset": 0,
        "slot": "208",
        "type": "t_uint256"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "__gap",
        "offset": 0,
        "slot": "209",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "erc20",
        "offset": 0,
        "slot": "258",
        "type": "t_contract(ERC20VotesMintable)"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "WETH",
        "offset": 0,
        "slot": "259",
        "type": "t_contract(IWETH)"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "founderRewardAddress",
        "offset": 0,
        "slot": "260",
        "type": "t_address"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "founderRewardExpiration",
        "offset": 0,
        "slot": "261",
        "type": "t_uint256"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "vrgdaCapStartTime",
        "offset": 0,
        "slot": "262",
        "type": "t_uint256"
      },
      {
        "contract": "src/TokenEmitter.sol:TokenEmitter",
        "label": "vrgdaCapExtraETH",
        "offset": 0,
        "slot": "263",
        "type": "t_uint256"
      }
    ]
  },
  "TCRFactory": {
    "storage": [
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "__gap",
        "offset": 0,
        "slot": "151",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "__gap",
        "offset": 0,
        "slot": "201",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "flowTCRImplementation",
        "offset": 0,
        "slot": "251",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "arbitratorImplementation",
        "offset": 0,
        "slot": "252",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "erc20Implementation",
        "offset": 0,
        "slot": "253",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "rewardPoolImplementation",
        "offset": 0,
        "slot": "254",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "tokenEmitterImplementation",
        "offset": 0,
        "slot": "255",
        "type": "t_address"
      },
      {
        "contract": "src/tcr/TCRFactory.sol:TCRFactory",
        "label": "WETH",
        "offset": 0,
        "slot": "256",
        "type": "t_address"
      }
    ]
  },
  "RewardPool": {
    "storage": [
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "__gap",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "_owner",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "201",
        "type": "t_address"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "_status",
        "offset": 0,
        "slot": "251",
        "type": "t_uint256"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "superToken",
        "offset": 0,
        "slot": "301",
        "type": "t_contract(ISuperToken)"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "rewardPool",
        "offset": 0,
        "slot": "302",
        "type": "t_contract(ISuperfluidPool)"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "manager",
        "offset": 0,
        "slot": "303",
        "type": "t_address"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "funder",
        "offset": 0,
        "slot": "304",
        "type": "t_address"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "cachedFlowRate",
        "offset": 20,
        "slot": "304",
        "type": "t_int96"
      },
      {
        "contract": "src/RewardPool.sol:RewardPool",
        "label": "poolConfig",
        "offset": 0,
        "slot": "305",
        "type": "t_struct(PoolConfig)_storage"
      }
    ]
  },
  "NounsFlow": {
    "storage": [
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "_owner",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "201",
        "type": "t_address"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "_status",
        "offset": 0,
        "slot": "251",
        "type": "t_uint256"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "fs",
        "offset": 0,
        "slot": "301",
        "type": "t_struct(Storage)_storage"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "323",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "_childFlows",
        "offset": 0,
        "slot": "423",
        "type": "t_struct(AddressSet)_storage"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "_childFlowsToUpdateFlowRate",
        "offset": 0,
        "slot": "425",
        "type": "t_struct(AddressSet)_storage"
      },
      {
        "contract": "src/NounsFlow.sol:NounsFlow",
        "label": "verifier",
        "offset": 0,
        "slot": "427",
        "type": "t_contract(ITokenVerifier)"
      }
    ]
  },
  "FlowStorageV1": {
    "storage": [
      {
        "contract": "src/storage/FlowStorage.sol:FlowStorageV1",
        "label": "fs",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Storage)_storage"
      },
      {
        "contract": "src/storage/FlowStorage.sol:FlowStorageV1",
        "label": "__gap",
        "offset": 0,
        "slot": "22",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/storage/FlowStorage.sol:FlowStorageV1",
        "label": "_childFlows",
        "offset": 0,
        "slot": "122",
        "type": "t_struct(AddressSet)_storage"
      },
      {
        "contract": "src/storage/FlowStorage.sol:FlowStorageV1",
        "label": "_childFlowsToUpdateFlowRate",
        "offset": 0,
        "slot": "124",
        "type": "t_struct(AddressSet)_storage"
      }
    ]
  },
  "VrbsFlow": {
    "storage": [
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "_owner",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "201",
        "type": "t_address"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "_status",
        "offset": 0,
        "slot": "251",
        "type": "t_uint256"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "fs",
        "offset": 0,
        "slot": "301",
        "type": "t_struct(Storage)_storage"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "323",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "_childFlows",
        "offset": 0,
        "slot": "423",
        "type": "t_struct(AddressSet)_storage"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "_childFlowsToUpdateFlowRate",
        "offset": 0,
        "slot": "425",
        "type": "t_struct(AddressSet)_storage"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "erc721Votes",
        "offset": 0,
        "slot": "427",
        "type": "t_contract(IERC721Checkpointable)"
      },
      {
        "contract": "src/VrbsFlow.sol:VrbsFlow",
        "label": "votingEnabled",
        "offset": 20,
        "slot": "427",
        "type": "t_bool"
      }
    ]
  },
  "AllocatorFlow": {
    "storage": [
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "_owner",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "201",
        "type": "t_address"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "_status",
        "offset": 0,
        "slot": "251",
        "type": "t_uint256"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "fs",
        "offset": 0,
        "slot": "301",
        "type": "t_struct(Storage)_storage"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "__gap",
        "offset": 0,
        "slot": "323",
        "type": "t_array(t_uint256)_storage"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "_childFlows",
        "offset": 0,
        "slot": "423",
        "type": "t_struct(AddressSet)_storage"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "_childFlowsToUpdateFlowRate",
        "offset": 0,
        "slot": "425",
        "type": "t_struct(AddressSet)_storage"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "allocator",
        "offset": 0,
        "slot": "427",
        "type": "t_address"
      },
      {
        "contract": "src/AllocatorFlow.sol:AllocatorFlow",
        "label": "_manualRecipients",
        "offset": 0,
        "slot": "428",
        "type": "t_struct(AddressSet)_storage"
      }
    ]
  }
}
